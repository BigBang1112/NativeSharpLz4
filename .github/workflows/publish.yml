name: Publish NativeSharpLz4 package

on:
  release:
    types: [ published ]

permissions:
  contents: write # important for release description edit and asset upload
  packages: write

jobs:
  prepare-description:
    name: Set release description
    runs-on: ubuntu-latest
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_BODY: ${{ github.event.release.body }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set release information
        run: |
          FINAL_BODY="***[Release is being automatically created, please wait...](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})***
          
          $RELEASE_BODY"
          gh release edit ${{ github.ref_name }} -n "$FINAL_BODY"

  build-and-test:
    name: Build lz4 ${{ vars.LZ4_VERSION }} package + test
    uses: ./.github/workflows/build-package.yml
    with:
      version: ${{ vars.LZ4_VERSION }}
      runs-on: "['ubuntu-latest']"
      upload_package: true
  
  publish:
    needs:
      - prepare-description
      - build-and-test

    name: Publish package
    runs-on: ubuntu-latest
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download lz4 package build
        uses: actions/download-artifact@v4
        with:
          name: build
        
      - name: Publish package to nuget.org
        run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Publish package to github.com
        run: dotnet nuget push *.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/bigbang1112/index.json --skip-duplicate

      - name: Upload package to this release
        run: gh release upload ${{ github.ref_name }} *.nupkg
    
  finalize-description:
    needs: publish
    
    runs-on: ubuntu-latest
    name: Finalize release description
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_BODY: ${{ github.event.release.body }}
    
    steps:
      - uses: actions/checkout@v4
      - name: Set release information
        run: |
          FINAL_BODY="$RELEASE_BODY
          
          Assets were automatically generated using the [publish workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          gh release edit ${{ github.ref_name }} -n "$FINAL_BODY"
